install.packages("dslabs")
library(dslabs)
a <- 1
b <- 1
c <- -1
(-b + sqrt(b^2 - 4*a*c) ) / ( 2*a )
(-b - sqrt(b^2 - 4*a*c) ) / ( 2*a )
ls
ls()
print(a)
log(8)
log(a)
log(c)
?log
args(log)
log(8,2)
log(9,3)
log(base = 2, x = 8)
2^3
data()
co2
pi
inf
solution_1 <- (-b + sqrt(b^2 - 4*a*c)) / (2*a)
solution_2 <- (-b - sqrt(b^2 - 4*a*c)) / (2*a)
a >- 2
a <- 2
class(a)
class(ls)
class(class)
library(dslabs)
data("murders")
class(murders)
str(murders)
head(murders)
murders$population
names(murders)
class(murders$population)
pop = murders$population
len(pop)
pop
pop <- murders$population
length(pop)
pop = murders$population
length(pop)
"a"
class(murders$population)
class(murders$stae)
class(murders$state)
z <- 3==2
z
class(z)
class(murders$region)
levels(murders$region)
# Loading library and dataset
library(dslabs)
data("murders")
# Some basic operations
a <- 2
class(a)
class(ls)
class(class)
class(murders)
# Structure of dataframe
str(murders)
# Head of dataframe
head(murders)
# Names of columns
names(murders)
# Class of single column
class(murders$population)
# Length of the single column vector
pop = murders$population
length(pop)
# Character Vector
class(murders$state)
# Logical Vector
z <- 3==2
class(z)
# Factor vector
class(murders$region)
# Unique values in factor
levels(murders$region)
# Number of levels
length(levels(murders$region))
# Rows in each level
table(murders$region)
# Another way of accessing a column
murders[["population"]]
identical(murders[["population"]],murders$population)
clear
clear)
clear()
cls()
setwd("~/my_projects/R Basics")
pwd
# Generate Sequence
seq(1:10)
# Generate Sequence
seq(1,10)
1:10
# Generate Sequence
s1 = seq(1,10)
s2 = 1:10
sum(s1)
sum(s2)
setwd("~/my_projects/R-basics")
# Loading library and dataset
library(dslabs)
data("murders")
# Some basic operations
a <- 2
class(a)
class(ls)
class(class)
class(murders)
# Structure of dataframe
str(murders)
# Head of dataframe
head(murders)
# Names of columns
names(murders)
# Class of single column
class(murders$population)
# Length of the single column vector
pop = murders$population
length(pop)
# Character Vector
class(murders$state)
# Logical Vector
z <- 3==2
class(z)
# Factor vector
class(murders$region)
# Unique values in factor
levels(murders$region)
# Number of levels
length(levels(murders$region))
# Rows in each level
table(murders$region)
# Another way of accessing a column
murders[["population"]]
identical(murders[["population"]],murders$population)
# Generate Sequence
s1 = seq(1,10)
s2 = 1:10
sum(s1)
sum(s2)
